<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>BloodNova</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <link rel="stylesheet" href="style.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <style>
        /* Floating chat container */
        .chat-container {
    position: fixed !important; /* Added !important to override any other styles */
    bottom: 20px !important;
    right: 20px !important;
    z-index: 9999 !important; /* Increased z-index to ensure it stays on top */
    display: flex !important;
    flex-direction: column !important;
    align-items: flex-end !important;
    max-height: 100vh !important; /* Ensure it doesn't exceed viewport height */
}
        /* Chat button */
        .chat-button {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            background-color: #4CAF50;
            color: white;
            display: flex;
            justify-content: center;
            align-items: center;
            cursor: pointer;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            transition: all 0.3s ease;
        }

        .chat-button:hover {
            background-color: #157118;
            transform: scale(1.05);
        }

        /* Chat window */
        .chat-window {
            width: 350px;
            height: 450px;
            background-color: white;
            border-radius: 10px;
            display: flex;
            flex-direction: column;
            margin-bottom: 15px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
            transition: all 0.3s ease;
            display: none;
        }

        /* Chat header */
        .chat-header {
            padding: 15px;
            background-color: #4CAF50;
            color: white;
            border-top-left-radius: 10px;
            border-top-right-radius: 10px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        /* Chat messages container */
        .chat-messages {
            flex-grow: 1;
            padding: 15px;
            overflow-y: auto;
        }

        /* Messages */
        .message {
            margin-bottom: 15px;
            max-width: 80%;
        }

        .user-message {
            background-color: #e9ecef;
            padding: 10px;
            border-radius: 15px;
            margin-left: auto;
        }

        .bot-message {
            background-color: #4CAF50;
            color: white;
            padding: 10px;
            border-radius: 15px;
        }

        /* Chat input area */
        .chat-input {
            display: flex;
            padding: 10px;
            border-top: 1px solid #e9ecef;
        }

        .chat-input input {
            flex-grow: 1;
            border: 1px solid #ced4da;
            border-radius: 20px;
            padding: 8px 15px;
            margin-right: 10px;
        }

        .chat-input button {
            border-radius: 20px;
        }
    </style>
</head>
<body class="d-flex flex-column min-vh-100">
    <% if (page === "home") { %>
        <!-- Preloader (ONLY for Home Page) -->
        <div id="preloader">
            <h1 class="preloader-text">
                <span>B</span><span>l</span><span>o</span><span>o</span><span>d</span>
                <span>N</span><span>o</span><span>v</span><span>a</span>
            </h1>
        </div>
        
    <% } %>
    <div id="main-content">
    <%- include("../includes/navbar.ejs") %>
    <main class="container flex-grow-1 d-flex align-items-center justify-content-center">
       
        <%- body %>
         <!-- This will render page-specific content -->
    </main>
    <div class="chat-container" id="chat-container">
        <div class="chat-window" id="chatWindow">
            <div class="chat-header">
                <div>Leukemia Detection Assistant</div>
                <div class="close-button" id="closeChat" style="cursor: pointer;">
                    <i class="fas fa-times"></i>
                </div>
            </div>
            <div class="chat-messages" id="chatMessages">
                <!-- Messages will be added here -->
            </div>
            <div class="chat-input">
                <input type="text" id="messageInput" placeholder="Type your question..." class="form-control">
                <button class="btn btn-primary" id="sendButton">
                    <i class="fas fa-paper-plane"></i>
                </button>
            </div>
        </div>
        <div class="chat-button" id="chatButton">
            <i class="fas fa-comments fa-lg"></i>
        </div>
    </div>
    <%- include("../includes/footer.ejs") %>
</div>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        const chatButton = document.getElementById('chatButton');
        const chatWindow = document.getElementById('chatWindow');
        const closeChat = document.getElementById('closeChat');
        const messageInput = document.getElementById('messageInput');
        const sendButton = document.getElementById('sendButton');
        const chatMessages = document.getElementById('chatMessages');
        
        // Toggle chat window
        chatButton.addEventListener('click', function() {
            chatWindow.style.display = chatWindow.style.display === 'flex' ? 'none' : 'flex';
            
            // Add welcome message if chat is empty
            if (chatMessages.children.length === 0) {
                addBotMessage("Hello! I'm the Leukemia Detection Assistant. How can I help you today?");
            }
            
            // Focus on input
            messageInput.focus();
        });
        
        // Close chat window
        closeChat.addEventListener('click', function() {
            chatWindow.style.display = 'none';
        });
        
        // Send message on button click
        sendButton.addEventListener('click', sendMessage);
        
        // Send message on Enter key
        messageInput.addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                sendMessage();
            }
        });
        
        // Function to send message
        function sendMessage() {
            const message = messageInput.value.trim();
            if (message === '') return;
            
            // Add user message to UI
            addUserMessage(message);
            
            // Clear input field
            messageInput.value = '';
            
            // Show loading indicator
            const loadingId = showLoading();
            
            // Send message to backend API
            fetch('/api/chatbot', {  // This endpoint will proxy to Flask
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ message: message }),
            })
            .then(response => response.json())
            .then(data => {
                // Remove loading indicator
                removeLoading(loadingId);
                
                // Display bot response from backend
                addBotMessage(data.response);
            })
            .catch(error => {
                // Remove loading indicator
                removeLoading(loadingId);
                
                // Show error message
                addBotMessage("I'm sorry, I couldn't process your request. Please try again later.");
                console.error('Error:', error);
            });
        }
        
        // Add user message to chat
        function addUserMessage(text) {
            const messageDiv = document.createElement('div');
            messageDiv.className = 'message user-message';
            messageDiv.textContent = text;
            chatMessages.appendChild(messageDiv);
            scrollToBottom();
        }
        
        // Add bot message to chat
        function addBotMessage(text) {
            const messageDiv = document.createElement('div');
            messageDiv.className = 'message bot-message';
            messageDiv.textContent = text;
            chatMessages.appendChild(messageDiv);
            scrollToBottom();
        }
        
        // Show loading indicator
        function showLoading() {
            const loadingDiv = document.createElement('div');
            loadingDiv.className = 'message bot-message';
            loadingDiv.textContent = "...";
            loadingDiv.id = 'loading-' + Date.now();
            chatMessages.appendChild(loadingDiv);
            scrollToBottom();
            return loadingDiv.id;
        }
        
        // Remove loading indicator
        function removeLoading(id) {
            const loadingDiv = document.getElementById(id);
            if (loadingDiv) {
                loadingDiv.remove();
            }
        }
        
        // Scroll to bottom of chat
        function scrollToBottom() {
            chatMessages.scrollTop = chatMessages.scrollHeight;
        }
    });

    // Ensure the chatbot is positioned correctly when page loads
    window.addEventListener('load', function() {
        // Wait a bit for any other scripts to finish
        setTimeout(function() {
            // Ensure the chatbot is in the correct position
            const chatContainer = document.getElementById('chat-container');
            
            // Force the chatbot to the correct position
            if (chatContainer) {
                chatContainer.style.position = 'fixed';
                chatContainer.style.bottom = '20px';
                chatContainer.style.right = '20px';
                chatContainer.style.zIndex = '10000';
            }
        }, 500); // 500ms delay
    });
</script>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
</body>
</html>